@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>
@{
    /*var client = new WebClient();
    var json = client.DownloadString("http://localhost:49413/api/artigos/top/5");
    var top_artigos = Json.Decode(json);
    json = client.DownloadString("http://localhost:49413/api/docvenda/totalabs");
    var total_vendas = Json.Decode(json);
    json = client.DownloadString("http://localhost:49413/api/doccompra/totalabs");
    var total_compras = Json.Decode(json);
    json = client.DownloadString("http://localhost:49413/api/clientes/top/5");
    var top_clientes = Json.Decode(json);
    json = client.DownloadString("http://localhost:49413/api/lucro/year/0");
    var lucro = Json.Decode(json);
    json = client.DownloadString("http://localhost:49413/api/contas/receber/0");
    var aReceber = Json.Decode(json);
    json = client.DownloadString("http://localhost:49413/api/contas/pagar/0");
    var aPagar = Json.Decode(json);*/
    var client = new WebClient();
    client.Encoding = System.Text.Encoding.UTF8;
    var json = client.DownloadString("http://localhost:49413/api/clientes/");
    var clientes = Json.Decode(json);
}

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-3 col-md-2 sidebar">
            <ul class="nav nav-sidebar">
                <li><a href="/">Resumo</a></li>
                <li><a href="/Sales">Vendas</a></li>
                <li><a href="/Purchases">Compras</a></li>
                <li><a href="/Inventory">Inventário <span class="sr-only">(current)</span></a></li>
                <li class="active"><a href="/Clients">Clientes<span class="sr-only">(current)</span></a></li>
            </ul>
        </div>
        <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">

            <div class="row">
                <div class="row">
                    <div class="col-lg-8 col-sm-12 col-lg-offset-2">
                        <h2>Clientes</h2>
                        <div class="table-responsive">
                            <table class="table table-striped table_data">
                                <thead>
                                    <tr>
                                        <th>Nome</th>
                                        <th>Codigo de Cliente</th>
                                        <th>Morada</th>
                                        <th>Numero de Contribuinte</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var cliente in clientes)
                                    {
                                        <tr>
                                            <td>@cliente.NomeCliente</td>
                                            <td>@cliente.CodCliente</td>
                                            <td>@cliente.Morada</td>
                                            <td>@cliente.NumContribuinte</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>


    <script>

        $('table.table_data').each(function () {
            var currentPage = 0;
            var numPerPage = 10;
            var $table = $(this);
            $table.bind('repaginate', function () {
                $table.find('tbody tr').hide().slice(currentPage * numPerPage, (currentPage + 1) * numPerPage).show();
            });
            $table.trigger('repaginate');
            var numRows = $table.find('tbody tr').length;
            var numPages = Math.ceil(numRows / numPerPage);
            var $div = $('<div class="row text-center"></div>')
            var $pager = $('<ul class="pagination"></ul>');
            for (var page = 0; page < numPages; page++) {
                var pagenum = parseInt(page) + 1;
                $('<li class="page-number"></li>').html('<a href="#">' + pagenum + '</a>').bind('click', {
                    newPage: page
                }, function (event) {
                    currentPage = event.data['newPage'];
                    $table.trigger('repaginate');
                    $(this).addClass('active').siblings().removeClass('active');
                }).appendTo($pager).addClass('clickable');
            }
            $div.html($pager);
            $div.insertAfter($table.parent()).find('li.page-number:first').addClass('active');


        });

        $('.dropdown-menu.year-dropdown select').click(function (e) {
            e.stopPropagation();
        });

        $("#sales-panel").css('cursor', 'pointer');
        $("#purchases-panel").css('cursor', 'pointer');
        $("#sales-panel").click(function () {
            window.location.href = "Sales";
        });

        $("#purchases-panel").click(function () {
            window.location.href = "Purchases";
        });



        function formatDate(myDate) {
            var m_names = new Array("Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez");

            var d = new Date(myDate);

            var curr_month = d.getMonth();
            //var curr_year = d.getFullYear();
            //return (m_names[curr_month] + "-" + curr_year);
            return (m_names[curr_month]);
        }

        function formatHoverLabel(row, preUnit) {
            var m_long_names = new Array("Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro");
            var d = new Date(row.month);
            var curr_month = d.getMonth();
            var curr_year = d.getFullYear();

            var salesText = "Balanço para " + m_long_names[curr_month] + " de " + curr_year;
            salesText = salesText + "<br/>" + labelsInGraph[0] + ": " + preUnit + row['vendas'];
            salesText = salesText + "<br/>" + labelsInGraph[1] + ": " + preUnit + row['compras'];
            salesText = salesText + "<br/>" + labelsInGraph[2] + ": " + preUnit + row['lucro'];
            return salesText;
        }

        labelsInGraph = ['Vendas', 'Compras', 'Lucro'];
        var firstchart = Morris.Line({
            element: 'firstchart',
            data: data_crescimento,
            xkey: 'month',
            // A list of names of data record attributes that contain y-values.
            ykeys: ['vendas', 'compras', 'lucro'],
            lineColors: ['green', 'red', 'blue'],
            // Labels for the ykeys -- will be displayed when you hover over the
            // chart.
            labels: labelsInGraph,
            hoverCallback: function (index, options, content, row) {
                return formatHoverLabel(row, options.preUnits);
            },
            xLabelFormat: function (str) {
                return formatDate(str);
            },
            preUnits: '€',
            resize: true
        });

        jQuery(function ($) {

            $(document).on({
                ajaxStart: function () {
                    $('#wait').css('display', 'block');
                },
                ajaxStop: function () {
                    $('#wait').css('display', 'none');
                }
            });

            $('#year-selection').on('change', function () {
                var teste = $('#selYear').val();
                var data_crescimento = [];
                if (teste == null) {
                    return;
                }
                else if (teste == 3) {
                    $.ajax({
                        async: true,
                        type: 'GET',
                        url: 'http://localhost:49413/api/doccompra/years/' + teste,
                        success: function (response) {
                            for (var i = 0; i < response.length; i++) {
                                var datatemp = { y: 'teste', b: '2' };

                                datatemp.y = response[i].Num;
                                datatemp.b = parseFloat(Math.round(response[i].Total * 100) / 100).toFixed(2);
                                data_crescimento.push(datatemp);
                            }
                        }
                    });

                    $.ajax({
                        async: true,
                        type: 'GET',
                        url: 'http://localhost:49413/api/docvenda/years/' + teste,
                        success: function (response) {
                            for (var i = 0; i < response.length; i++) {
                                var datatemp = { y: 'teste', a: '2' };

                                datatemp.y = response[i].Num;
                                datatemp.a = parseFloat(Math.round(response[i].Total * 100) / 100).toFixed(2);
                                data_crescimento.push(datatemp);
                            }
                            firstchart.setData(data_crescimento);
                        }
                    });

                }
                else {

                    $.ajax({
                        async: true,
                        type: 'GET',
                        url: 'http://localhost:49413/api/lucro/year/' + teste,
                        success: function (response) {
                            firstchart.setData(response);
                            firstchart.redraw();
                        }
                    });

                    $.ajax({
                        async: true,
                        type: 'GET',
                        url: 'http://localhost:49413/api/clientes/top/5/year/' + teste,
                        success: function (response) {
                            data_top_clientes.splice(0, data_top_clientes.length);
                            for (var i = 0; i < response.length; i++) {
                                var datatemp = { label: 'teste', value: '2' };

                                datatemp.label = response[i].NomeCliente;
                                datatemp.value = parseFloat(Math.round(response[i].TotalGasto * 100) / 100).toFixed(2);
                                data_top_clientes.push(datatemp);
                            }
                            secondchart.setData(data_top_clientes);
                            secondchart.redraw();
                        }
                    });

                    $.ajax({
                        async: true,
                        type: 'GET',
                        url: 'http://localhost:49413/api/artigos/top/5/year/' + teste,
                        success: function (response) {
                            data_top_artigos.splice(0, data_top_artigos.length);
                            for (var i = 0; i < response.length; i++) {
                                var datatemp = { label: 'teste', value: '2' };

                                datatemp.label = response[i].DescArtigo;
                                datatemp.value = parseFloat(Math.round(response[i].TotalVendas * 100) / 100).toFixed(2);
                                data_top_artigos.push(datatemp);
                            }
                            thirdchart.setData(data_top_artigos);
                            thirdchart.redraw();
                        }
                    });

                    $.ajax({
                        async: true,
                        type: 'GET',
                        url: 'http://localhost:49413/api/doccompra/totalabs/year/' + teste,
                        success: function (response) {
                            $('#total-compras').html(response);
                        }
                    });

                    $.ajax({
                        async: true,
                        type: 'GET',
                        url: 'http://localhost:49413/api/docvenda/totalabs/year/' + teste,
                        success: function (response) {
                            $('#total-vendas').html(response);
                        }
                    });

                    $.ajax({
                        async: true,
                        type: 'GET',
                        url: 'http://localhost:49413/api/contas/receber/' + teste,
                        success: function (response) {
                            $('#areceber').html(response);
                        }
                    });

                    $.ajax({
                        async: true,
                        type: 'GET',
                        url: 'http://localhost:49413/api/contas/pagar/' + teste,
                        success: function (response) {
                            $('#apagar').html(response);
                        }
                    });
                }


            });
        });

        var secondchart = Morris.Donut({
            element: 'secondchart',
            resize: true,
            data: data_top_clientes
        });

        var thirdchart = Morris.Donut({
            element: 'thirdchart',
            resize: true,
            data: data_top_artigos
        });
    </script>

    <h2>Clientes</h2>
